# Default values for heat

conf:
  region_name_for_services:
  debug: false
  trusts_delegated_roles: member
  keystone:
    auth_url:
    username: heat
    project_name: service
    memcached_servers: []

vault:
  role: k8s
  settings_secret: 'path/to/secret/in/vault'

job:
  db_sync:
    enabled: true
    command:
      - heat-manage
      - db_sync
  db_clean:
    enabled: true
    # NOTE(rk760n): key rotation frequency, token expiration, active keys, and allow_expired_window should statisfy the formula
    # max_active_keys = ((token_expiration + allow_expired_window) / rotation_frequency) + 2
    # As expiration is 12h, max_active_keys is 7 and allow_expired_window is 48h by default,
    # rotation_frequency need to be adjusted
    # 12 hours
    cron: "0 10 * * *"
    older_than_days: 365
    history:
      success: 3
      failed: 1

api:
  name: heat-api
  port: 8004
  command:
    - kolla_httpd_start
  apache:
    enabled: true
    wsgi_script: heat-wsgi-api
  image:
    repository: "registry.rc.nectar.org.au/kolla/ubuntu-source-heat-api"
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  volumes:
    - name: tmp
      emptyDir: {}
  volume_mounts:
    - name: tmp
      mountPath: /tmp
  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  gateway:
    enabled: false
    annotations: {}
    hostname: chart-example.local
    parentRefs:
      - name: default


api_cfn:
  name: heat-api-cfn
  port: 8000
  command:
    - kolla_httpd_start
  apache:
    enabled: true
    wsgi_script: heat-wsgi-api-cfn
  image:
    repository: "registry.rc.nectar.org.au/kolla/ubuntu-source-heat-api-cfn"
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  volumes:
    - name: tmp
      emptyDir: {}
  volume_mounts:
    - name: tmp
      mountPath: /tmp
  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  gateway:
    enabled: false
    annotations: {}
    hostname: chart-example.local
    parentRefs:
      - name: default


engine:
  name: heat-engine
  command:
    - heat-engine
  image:
    repository: "registry.rc.nectar.org.au/kolla/ubuntu-source-heat-engine"
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  volumes:
    - name: tmp
      emptyDir: {}
  volume_mounts:
    - name: tmp
      mountPath: /tmp


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


oslo_policy:
  'cloud_admin': 'role:cloud_admin'
  'read_only': 'role:monitoring or role:read_only or role:helpdesk'
  'admin_or_monitoring': 'rule:admin_required or rule:read_only or rule:cloud_admin'
  'stacks:global_index': 'rule:admin_or_monitoring'


image:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 42418
  runAsGroup: 42418
  fsGroup: 42418
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE

# capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []
